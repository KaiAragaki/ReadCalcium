shinyServer(function(input, output) {
# TODO:
  # Allow downloading of graphs
  # calDFTable groupby
require("tidyverse")
require("dichromat")
# Initial Data Analysis   
  calData <- reactive({
    calFile <- read.delim(input$fileUpload$datapath)
    calFile <- calFile[ ,-1]
    
    # Initiate Variables
    input <- unlist(strsplit(input$conditionNames, ","))
    conds <- c(input, "Ionomycin")
    
    # Sets baseline and standard cond time intervals
    interval <- c(0:4)
    condInterval <- c(.5, 1, 2, 3, 5)
    addTimes <- c(4) 
    
    # Loops for each cond and appends the time - not including Ionomycin time, which has its own interval.
    for (i in 1:(length(conds) - 1)){
      addtlCond <- condInterval + last(interval)
      interval <- c(interval, addtlCond)
      addTimes <- c(addTimes, last(interval))
    }
    
    # Tacks on ionomycin time
    ionomycinInterval <- last(interval) + c(.5, 1, 2, 3)
    condTimes <- c(interval, ionomycinInterval)

    # Subtracts background from each cell
    minusBG <- mutate_all(calFile, function(x) {x - calFile[ ,1]})
    minusBG <- minusBG[ ,-1]
    condTimesOld <- condTimes
    condTimes <- rep(condTimes, ncol(minusBG))
    
    # Slices and dices, with math
    calDF <- data.frame("Condition Times" = condTimes, "380" = stack(minusBG[seq(2, nrow(minusBG), 2),]), "340" = stack(cal340 <- minusBG[seq(1, nrow(minusBG), 2),])) %>%
      mutate("X340380" = X340.values/X380.values) %>%
      group_by(X380.ind) %>%
      mutate("Baseline" = mean(X340380[1:5]), "maxIono" = max(tail(X340380)), "dynR" = (X340380-Baseline)/(maxIono-Baseline) * 100) %>%
      group_by(Condition.Times) %>%
      mutate("mean380" = mean(X380.values), "mean340" = mean(X340.values))
    
    # Final Outputs
    list(calDF, addTimes, conds, condTimesOld, condTimes)
    })
  
# On Slider Shift
  rectangles <- eventReactive(input$slpDvgSensitivity,{
    
    # Unpacking Data
    calDF <- as.data.frame(calData()[1])
    condTimesOld <- unlist(calData()[4])
    condTimes <- unlist(calData()[5])
    slpDvg<- input$slpDvgSensitivity
    
    # Initiating Variables
    divergeStart <- divergeEnd <- c()
    
    for (i in 1:(length(condTimesOld)-1)){
      if(calDF$mean380[i] - calDF$mean380[i+1] > slpDvg & calDF$mean340[i + 1] - calDF$mean340[i] > slpDvg | calDF$mean380[i+1] - calDF$mean380[i] > slpDvg & calDF$mean340[i] - calDF$mean340[i + 1] > slpDvg){
        divergeStart <- c(divergeStart, condTimes[i])
        divergeEnd <- c(divergeEnd, condTimes[i+1])
      }
    }
    rectangles <- data.frame(xstart = divergeStart, xend = divergeEnd)
  })
 
# On Submit Click
  observeEvent(input$submit,{
    calDF <- as.data.frame(calData()[1])
    addTimes <- unlist(calData()[2])
    conds <- unlist(calData()[3])
    calCommon <- list(theme(plot.title = element_text(hjust = 0.5), legend.position ="none", text = element_text(size = 20)), labs(x = "Time (min)", y = ""), geom_point(), geom_line(), geom_vline(xintercept = addTimes))
    
    # Plots
    output$X380Plot <- renderPlot({
      ggplot(data = calDF, aes(x=Condition.Times, y=X380.values, color = X340.ind)) + 
        calCommon +
        labs(title = "380") + 
        annotate("text", x=addTimes, y=max(calDF$X380.values), label = conds, size=10)
    })
    output$X340Plot <- renderPlot({
      ggplot(data = as.data.frame(calData()[1]), aes(x=Condition.Times, y=X340.values, color = X340.ind)) + 
        calCommon +
        labs(title = "340") + 
        annotate("text", x=addTimes, y=max(calDF$X340.values), label = conds, size=10)
    })
    output$X340380Plot <- renderPlot({
      g <- ggplot(data = as.data.frame(calData()[1]), aes(x=Condition.Times, y=X340380, color = X340.ind)) + 
        calCommon +
        labs(title = "340/380") + 
        annotate("text", x=addTimes, y=max(calDF$X340380), label = conds, size=10)
      if(length(rectangles()) != 0){g + annotate("rect", xmin = rectangles()$xstart, xmax = rectangles()$xend, ymin = -Inf, ymax = Inf, alpha = 0.2, fill = "steelblue4")}
      else{g}
    })
    output$X340380DynPlot <- renderPlot({
      f <- ggplot(data = as.data.frame(calData()[1]), aes(x=Condition.Times, y=dynR, color = X340.ind)) + 
        calCommon +
        labs(title = "340/380 as % Dynamic Ratio") + 
        annotate("text", x=addTimes, y=max(calDF$dynR), label = conds, size=10)
      if(length(rectangles()) != 0){f + annotate("rect", xmin = rectangles()$xstart, xmax = rectangles()$xend, ymin = -Inf, ymax = Inf, alpha = 0.2, fill = "steelblue4")}
      else{f}
    })
    
    # Table
    output$calDFTable <- renderTable(calDF)
  })
})
